s_sd <- sd(s_data)
s_mean
s_sd
s_data <- rnorm(10)
s_mean <- mean(s_data)
s_sd <- sd(s_data)
s_mean
s_sd
hist(s_data)
?runif
floor(runif(10,min = 1, max = 11))
sample_number <- floor(runif(10,min = 1, max = 11))
s_data[sample_number]
s_data
sample_number
#リサンプリング
iteration <- 1000
samples <- NULL
for(i in 1:iteration){
sample_number <- floor(runif(10,min = 1, max = 11))
each_samples <- s_data[sample_number]
samples <- c(samples, each_samples)
}
length(samples)
hist(samples)
mean(samples)
sd(samples)
#元データ作成：正規分布10サンプル
s_data <- rnorm(30)
s_mean <- mean(s_data)
s_sd <- sd(s_data)
s_mean
s_sd
hist(s_data)
#リサンプリング
iteration <- 1000
samples <- NULL
for(i in 1:iteration){
sample_number <- floor(runif(10,min = 1, max = 11))
each_samples <- s_data[sample_number]
samples <- c(samples, each_samples)
}
hist(samples)
mean(samples)
sd(samples)
t.test(s_data)
t.test(samples)
#元データ作成：正規分布30サンプル
n <- 30
samples <- rnorm(n)
samples_mean <- mean(samples)
samples_sd <- sd(samples)
#リサンプリング1000回
iteration <- 1000
resamples <- NULL
for(i in 1:iteration){
sample_number <- floor(runif(10,min = 1, max = n+1 ))
each_samples <- s_data[sample_number]
resamples <- c(resamples, each_samples)
}
#比較
par(mfrow=c(1,2))
hist(samples)
hist(resamples)
mean(samples)
sd(samples)
mean(resamples)
sd(resamples)
t.test(samples)
t.test(resmples)
t.test(resamples)
n <- 20
samples <- rnorm(n)
samples_mean <- mean(samples)
samples_sd <- sd(samples)
#リサンプリング1000回
iteration <- 1000
resamples <- NULL
for(i in 1:iteration){
sample_number <- floor(runif(10,min = 1, max = n+1 ))
each_samples <- s_data[sample_number]
resamples <- c(resamples, each_samples)
}
#比較
par(mfrow=c(1,2))
hist(samples)
hist(resamples)
mean(samples)
sd(samples)
mean(resamples)
sd(resamples)
t.test(samples)
t.test(resamples)
19/50
50*0.38*(1-0.38)
x <- c(1.11,0.29,0.23,-0.15,-0.48,-01.18,0.57,0.12,-0.32,1.12)
mean(x)
sd(x)
var(x)
x <- c(8,4,10,5,8,9,4,12,5,6)
logL <- function(m) sum(dpois(data,m,log=TRUE))
lambda <- seq(2,5,0.1)
plot(lambda,sapply(lambda, logL),type="l")
data <- c(8,4,10,5,8,9,4,12,5,6)
logL <- function(m) sum(dpois(data,m,log=TRUE))
lambda <- seq(2,5,0.1)
plot(lambda,sapply(lambda, logL),type="l")
x <- c(8,4,10,5,8,9,4,12,5,6)
mean(x)
x <- c(1.91, 3.79, 9.09, 1.58, 0.30, 5.57, 3.23, 5.11, 0.46, 5.80)
mean(x)
1/mean(x)
x <- c(3.99, 2.63, 3.41, 2.07, 2.73, 2.96, 2.08, 2.23, 3.34, 2.82)
mean(x)
len(x)
length(x)
# 確率密度関数: size回のうちx回成功する確率
size <- 10000
p <- 0.5
x <- 5009
# 累積確率
pbinom(x,size,p)
xbar <- 1
sd <- 5
n <- 20
t <- xbar / (sd/sqrt(n))
t
t <- xbar / (sd/sqrt(n-1))
t
xbar1 <- 1
xbar2 <- 2
var1 <- 5
n1 <- 20
var2 <- 4
n2 <- 15
var <- ((n1-1)*var1 + (n2-1)*var2)/((n1-1)+(n2-1))
t <- (xbar1 - xbar2)/sqrt(var*(1/n1+1/n2))
t
xbar <- 200
sd <- 4
n <- 100
xbar - 1.96 * sd / sqrt(n)
xbar + 1.96 * sd / sqrt(n)
81*126/268
x1 <- 81*126/268
x2 <- 59*142268
y1 <- 45 * 126/268
y2 <- 83 * 142 /268
(81-x1)^2/x1 + (59-x2)^2/x2 + (45-y1)^2/y1 + (83-y2)^2/y2
x2 <- 59*142/268
(81-x1)^2/x1 + (59-x2)^2/x2 + (45-y1)^2/y1 + (83-y2)^2/y2
x1+x2
x1 <- 81*126/268
x2 <- 59*142/268
x1+x2
x1 <- 140*126/268
x2 <- 140*142/268
x1+x2
y1 <- 128 * 126/268
y2 <- 128 * 142 /268
(81-x1)^2/x1 + (59-x2)^2/x2 + (45-y1)^2/y1 + (83-y2)^2/y2
x1+x2
y1+y2
-0.05538795/-1.378
y <- c(6.4,10.8,13.3,3,11.3,11.5,8.3,8.4,8.3,7.3)
y_hat <- c(5.7,9.3,12.1,3.1,12.7,11.3,7.5,7,7,10.9)
ybar <- mean(y)
y_hatbar <- mean(y_hat)
y-ybar
sum((y-ybar)^2) / sum((y_hat-ybar)^2)
sum((y_hat-ybar)^2) / sum((y-ybar)^2)
sum((y_hat-ybar)^2)
sum((y-ybar)^2)
y <- c(6.4,10.8,13.3,3,11.3,11.5,8.3,8.4,8.3,7.3)
y_hat <- c(5.7,9.3,12.1,3.1,12.7,11.3,7.5,7,7,10.9)
ybar <- mean(y)
sum((y_hat-ybar)^2) / sum((y-ybar)^2)
1/1.54
x <- c(1.11,0.29,0.23,-0.15,-0.48,-01.18,0.57,0.12,-0.32,1.12)
hist(x)
n <- length(x)
var(x)*(n-1)/n
x <- c(3.99, 2.63, 3.41, 2.07, 2.73, 2.96, 2.08, 2.23, 3.34, 2.82)
min(x)
max(x)
size <- 10000
p <- 0.5
x <- 5100
pbinom(x,size,x-1)
pbinom(x-1,size,p)
1-pbinom(x-1,size,p)
qnorm(0.025)
qnorm(97.5)
qnorm(0.975)
qnorm(0.2)
n1 <- 10000
a <- 0.05
b <- 0.2
qa <- qnorm(1-a/2)
qb <- qnorm(b)
qa
ab
qb
p1 <- 0.03
p2 <- 0.04
qb^2*p2*(1-p2)
(p2-p1+qa*sqrt(p1*(1-p1)/n1))^2
qb^2*p2*(1-p2) / (p2-p1+qa*sqrt(p1*(1-p1)/n1))^2
qa
qb^2*p2*(1-p2) / (p2-p1-qa*sqrt(p1*(1-p1)/n1))^2
p1 + qa * sqrt(p1*(1-p1)/n1)
n2 <- 3583
p2 + qb * sqrt(p2*(1-p2)/n2)
n2 <- 5459
p2 + qb * sqrt(p2*(1-p2)/n2)
n2 <- 3583
p2 + qb * sqrt(p2*(1-p2)/n2)
qbinom(0.2, 3583, p2)
3583*p2
p2 + qb * sqrt(p2*(1-p2)/n2)
p1 + qa * sqrt(p1*(1-p1)/n1)
##母比率の推定
#データ仮定：TV視聴率20%（900世帯）
n <- 900
p <- 0.2
x <- n * p
x
#区間推定
cf <- 0.95
cftile <- qnorm(cf+(1-cf)/2)
cftile
c(p - cftile * sqrt((p*(1-p)/n)),p + cftile * sqrt((p*(1-p)/n)))
#１コマンドで（２項検定）
binom.test(x,n)
c(p - 1.96 * sqrt((p*(1-p)/n)),p + cftile * sqrt((p*(1-p)/n)))
?binom.test
a_mean <- n1 * p1
a_var <- a_mean * (1-p1)
a_sd <- sqrt(a_var)
p1+qa*a_sd
a_mean
a_mean+qa*a_sd
b_mean <- n2 * p2
b_var <- b_mean * (1-p2)
b_sd <- sqrt(b_var)
b_mean
b_mean+qb*b_sd
qb^2*p2*(1-p2) / (p2-p1-qa*sqrt(p1*(1-p1)/n1))^2
p2 + qb * sqrt(p2*(1-p2)/n2)
p1 + qa * sqrt(p1*(1-p1)/n1)
n2 <- 613
p2 + qb * sqrt(p2*(1-p2)/n2)
x1 <- 140*126/268
x2 <- 140*142/268
y1 <- 128 * 126/268
y2 <- 128 * 142 /268
(81-x1)^2/x1 + (59-x2)^2/x2 + (45-y1)^2/y1 + (83-y2)^2/y2
x1+x2
y1+y2
vx <- matrix(c(81,45,59,83))
chisq.test(vx)
vx <- matrix(c(81,45,59,83), nrow=2, byrow=T)
vx
chisq.test(vx)
y <- c(6.4,10.8,13.3,3,11.3,11.5,8.3,8.4,8.3,7.3)
y_hat <- c(5.7,9.3,12.1,3.1,12.7,11.3,7.5,7,7,10.9)
ybar <- mean(y)
sum((y_hat-ybar)^2) / sum((y-ybar)^2)
plot(y,y_hat)
ybar
sum((y-ybar)^2)
sum((y_hat-ybar)^2)
sum((y - y_hat)^2)
sum((y - y_hat)^2)
gosa <- sum((y - y_hat)^2)
yosoku <- sum((y_hat-ybar)^2)
all <- sum((y-ybar)^2)
all
yosoku
gosa
sum((y-ybar)^2)  / sum((y_hat-ybar)^2)
plot(y)
plot(y_hat)
mean(y_hat)
cor(y,y_hat)
cor(y,y_hat)^2
#決定係数
y <- c(6.4, 10.8, 13.3, 3.0, 11.3, 11.5, 8.3, 8.4, 8.3, 7.3)
y_hat <- c(5.7, 9.3, 12.1, 3.1, 12.7, 11.3, 7.5, 7.0, 7.0, 10.9)
cor(y,y_hat)^2
cor(y,y_hat,method="spearman")^2
cor(y,y_hat,method="spearman")^2
cor(y,y_hat,method="pearson")^2
#交差エントロピー誤差
t <- c(0, 1, 1, 1, 1, 1, 0, 0, 1, 1)
y <- c(0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.4, 0.4, 0.6, 0.6)
-sum(t * log(y))
sum(t * log(y))
log(y)
t * log(y)
-sum(t * log(y))
#オッズ比
exp(1.54)
# データ読み込み
#単位変換：インチからセンチメートル、ポンドからキログラム
data("women")
women$height <- round(women$height / 0.39370,1)
n <- length(women$height)
mean <- mean(women$height)
sd <- sd(women$height)
hist(women$height)
n
mean
#１コマンドで（t検定）
t.test(data)
#１コマンドで（t検定）
t.test(women$height)
#t検定
t.test(women$height, mu=mu)
#母平均仮定
mu <- 160
#t検定
t.test(women$height, mu=mu)
?t.test
# データ読み込み
#単位変換：インチからセンチメートル、ポンドからキログラム
data("women")
women$height <- round(women$height / 0.39370,1)
n <- length(women$height)
mean <- mean(women$height)
sd <- sd(women$height)
hist(women$height)
n
mean
sd
# データ読み込み
#単位変換：インチからセンチメートル、ポンドからキログラム
data("women")
women$height <- round(women$height / 0.39370,1)
n <- length(women$height)
mean <- mean(women$height)
sd <- sd(women$height)
hist(women$height)
n
mean
sd
#母平均仮定
mu <- 160
#t検定
t.test(women$height, mu=mu)
#母平均仮定
mu <- 155
#t検定
t.test(women$height, mu=mu)
#母平均仮定
mu <- 158
#t検定
t.test(women$height, mu=mu)
?z.test
#母比率の検定
prop.test(300,400,p=0.8)
#母比率の検定
prop.test(750,1000,p=0.8)
#母比率の検定
prop.test(300,400,p=0.7)
?prop.test
?chisq.test
## 母分散の検定
chisq.test(women$height)
## 母分散の検定
#データの取得
data("women")
women$height <- round(women$height / 0.39370,1)
n <- length(women$height)
var <- var(women$height)
n
var
#区間推定
cf <- 0.95
cftile1 <- qchisq(cf+(1-cf)/2,n-1)
cftile2 <- qchisq((1-cf)/2,n-1)
cftile1
cftile2
c(n * var / cftile1,n * var / cftile2)
pchisq(chi,df=n-1)
#cftile2
chi <- n * var / cftile2
pchisq(chi,df=n-1)
## 無相関の検定
#データ読み込み
#単位変換：インチからセンチメートル、ポンドからキログラム
data("women")
women$height <- round(women$height / 0.39370,1)
women$weight <- round(women$weight / 2.2046,1)
plot(women$height,women$weight)
cor.test(women$height,women$weight)
length(women$height)
87*5
435/1403
700/1403
# 対応のある分散分析
InsectSprays_cde
# 対応のない分散分析
data("InsectSprays")
str(InsectSprays)
plot(count ~ spray, data = InsectSprays)
#boxplot(InsectSprays[,1]~InsectSprays[,2])
anova(aov(count~spray,data=InsectSprays))
# 多群の等分散の検定
bartlett.test(InsectSprays$count, InsectSprays$spray)
bartlett.test(count ~ spray, data = InsectSprays)
InsectSprays_cde <- rbind(InsectSprays[InsectSprays$spray == "C",],InsectSprays[InsectSprays$spray == "D",],InsectSprays[InsectSprays$spray == "E",])
bartlett.test(count ~ spray, data = InsectSprays_cde)
# 対応のある分散分析
InsectSprays_cde
library(dplyr)
install.packages("dplyr")
install.packages("plogr")
library(dplyr)
group_by(InsectSprays, spray)
group_by(InsectSprays_cde, spray)
summarize(df, n=n())
df <- group_by(InsectSprays_cde, spray)
summarize(df, n=n())
InsectSprays_cde
1:12
rep(1:12,3)
InsectSprays_cde["A"] <- rep(1:12,3)
InsectSprays_cde
summary(aov(count ~ A + spray, InsectSprays_cde))
aov(count ~ A + spray, InsectSprays_cde)
anova(aov(count ~ A + spray, InsectSprays_cde))
head(InsectSprays_cde)
summarize(df, n=n())
#対応のない分散分析実行
anova(aov(count ~ spray, InsectSprays_cde))
InsectSprays_cde <- rbind(InsectSprays[InsectSprays$spray == "C",],InsectSprays[InsectSprays$spray == "D",],InsectSprays[InsectSprays$spray == "E",])
#対応のある情報を付加
InsectSprays_cde["NO"] <- factor(rep(1:12,3))
head(InsectSprays_cde)
#対応のある分散分析実行
#summary(aov(count ~ A + spray, InsectSprays_cde))
anova(aov(count ~ spray + NO , InsectSprays_cde))
#二元配置分散分析
data('PlantGrowth')
PlantGrowth
data("Orange")
Orange
B <- factor(rep(1:4,3)
B <- factor(rep(1:4,3)
)
B <- factor(rep(1:4,3))
B
B <- factor(c(1,1,2,2,1,1,2,2))
A <- factor(rep(1:4,2))
#二元配置分散分析
a1 <- c(0,2,8,10)
a2 <- c(6,8,9,13)
X <- c(a1,a2)
data.frame(X,A,B)
A <- factor(sort(rep(1:2,2)))
data.frame(X,A,B)
B <- factor(c(rep(1:2,4)))
B
# 二元配置分散分析
#サンプルデータ作成
a1 <- c(0,2,8,10)
a2 <- c(6,8,9,13)
A <- factor(c(1,1,1,1,2,2,2,2))
B <- factor(c(1,1,2,2,1,1,2,2))
X <- c(a1,a2)
data.frame(X,A,B)
sample_anova <- data.frame(X,A,B)
y <- c(a1,a2)
sample_anova <- data.frame(y,A,B)
sample_anova
summary(aov(y~A+B,data=sample_anova))
summary(aov(y~A*B,data=sample_anova))
attach(sample_anova)
interaction.plot(sample_anova)
109/113
test <- c(1,2,3,NA)
test2 <- c(NA,4,5,6)
is.na(test)
sum(is.na(test))
str(iris)
library(formattable)
formattable(iris[c(1:3,51:53,101:103),])
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width))+
geom_point()+
geom_smooth()+
theme_bw()
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()
ggplot(iris,aes(x=Petal.Length))+
geom_histogram()
rm(list())
?rm
rm(list=ls())
?confusion.matrix
??confusion.matrix
install.packages("caret")
library(caret)
?rep
?seq
x <- seq(0,1,by=0.1)
x <- seq(0,1,by=0.1)
y <- x^6 * (1-x)^4
plot(x,y)
plot(x,y,type="b")
setwd("~/Desktop/Blog-DATACOACH/R-statistics-beginner")
